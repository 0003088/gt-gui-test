#!/bin/sh
#test_script.sh
#shell test suite for kdb command

#variables
nbError=0
nbTest=0

if [ "z$1" = 'z' ]; then
  HOME=.
else
  HOME=$1
fi
export HOME

VALUE="value"
ROOT="user/tests/script`mktemp -u --tmpdir=/ XXXXXXXXXXXX`"

USER="`id -un`"
GROUP="`id -gn`"

FOLDER=@KDB_DB_HOME@/$USER/@KDB_DB_USER@
FILE=test.ecf
KDB=@KDB_COMMAND@

DATE="`date \"+%b %d %H:%M\"`"

#define succeed_if(x,y) nbTest++; if (!(x)) { nbError++; printf("%s:%d: error in %s: %s\n", __FILE__, __LINE__, __FUNCTION__, y);}
#succeed if the previous command was successful
succeed_if ()
{
	if [ $? != "0" ]
	then
		nbError=$(( $nbError + 1 ))
		echo error: $*
	fi
	nbTest=$(( $nbTest + 1 ))
}

#define exit_if_fail(x,y) nbTest++; if (!(x)) { printf("%s:%d: fatal in %s: %s\n", __FILE__, __LINE__, __FUNCTION__, y); exit(1); }
#fails and exits the program if the previous command failed
exit_if_fail ()
{
	if [ $? != "0" ]
	then
		echo fatal: $*
		exit 1
	fi
	nbTest=$(( $nbTest + 1 ))
}

echo
echo ELEKTRA SCRIPTS TESTS
echo

echo "testing set and get commands"

#$KDB mount $FILE $ROOT >/dev/null
#succeed_if "could not mount $FILE at $ROOT"

$KDB set $ROOT "root" >/dev/null
exit_if_fail "could not set root"

#[ -f $FOLDER/$FILE ]
#succeed_if "$FOLDER/$FILE does not exist"

[ "x`$KDB get $ROOT 2> /dev/null`" = "xroot" ]
succeed_if "could not set root"

$KDB set "$ROOT/value" "$VALUE" >/dev/null
exit_if_fail "could not set value"

[ "x`$KDB get $ROOT/value 2> /dev/null`" = "x$VALUE" ]
exit_if_fail "cant get $ROOT/value"

echo "testing ls command"

[ "x`$KDB ls $ROOT/value 2> /dev/null`" = "x$ROOT/value" ]
succeed_if "cant ls $ROOT (may mean that $ROOT folder is not clean)"

echo "testing rm command"

$KDB rm $ROOT/value
succeed_if "could not remove user/test/value"

$KDB get $ROOT/value 2>/dev/null
[ $? != "0" ]
succeed_if "got removed key $ROOT/value"

$KDB rm $ROOT >/dev/null 2>/dev/null
succeed_if "could not remove user/test/value"

$KDB get $ROOT/value 2> /dev/null
[ $? != "0" ]
succeed_if "got removed key $ROOT"

#[ ! -f $FOLDER/$FILE ]
#succeed_if "$FOLDER/$FILE still exist"


#############
# xml tests
#############

#echo "testing xml importing and exporting"
#
#$KDB import fstab.xml
#succeed_if "importing fstab.xml failed"
#
#$KDB export user/tests/fstab > fstab-gen.xml
#succeed_if "exporting user/tests/fstab failed"
#
#diff fstab-gen.xml fstab-cmp.xml
#succeed_if "xml files are not the same"
#
#rm fstab-gen.xml
#succeed_if "could not rm key-gen.xml"
#
#$KDB rm -r user/tests/fstab

echo test_script.sh RESULTS: $nbTest "test(s)" done $nbError "error(s)".
exit $nbError

