#include "parser.hpp"

#include <fstream>
#include <iostream>

using namespace std;

ostream& operator << (ostream& os, parse_t& p)
{
	os << "/*This is an auto-generated file generated by exporterrors. Do not modify it.*/" << endl
	   << endl
	   << "#ifndef KDBERRORS_H" << endl
	   << "#define KDBERRORS_H" << endl
	   << endl
	   << "#include <kdb.h>" << endl
	   << endl;

	for (size_t i = 1; i<p.size(); ++i)
	{
		os << "static inline void elektraSetError" << i << "(Key *errorKey, const char *reason," << endl
		   << "	const char *file, const char *line)" << endl
		   << "{" << endl
		   << "	if (!errorKey) return;" << endl
		   << "	 keySetMeta(errorKey, \"error\", \"" << "number description ingroup module file line function reason" << "\");" << endl
		   << "	 keySetMeta(errorKey, \"error/number\", \"" << i << "\");" << endl
		   << "	 keySetMeta(errorKey, \"error/description\", \"" << p[i]["description"] << "\");" << endl
		   << "	 keySetMeta(errorKey, \"error/ingroup\", \"" << p[i]["ingroup"] << "\");" << endl
		   << "	 keySetMeta(errorKey, \"error/module\", \"" << p[i]["module"] << "\");" << endl
		   << "	 keySetMeta(errorKey, \"error/file\", " << "file" << ");" << endl
		   << "	 keySetMeta(errorKey, \"error/line\", " << "line" << ");" << endl
		   << "	 keySetMeta(errorKey, \"error/reason\", " << "reason" << ");" << endl
		   << "}" << endl
		   << endl;
	}

	os << "#endif" << endl;
	return os;
}

int main(int argc, char** argv) try
{
	if (argc == 1 || argc > 3)
	{
		cerr << "Usage " << argv[0] << " infile [outfile]" << endl;
		return 1;
	}

	string infile = argv[1];

	parse_t result = parse (infile);

	if (argc == 3)
	{
		ofstream fout(argv[2]);
		if (!fout.is_open())
		{
			cerr << "Could not open output file" << endl;
			return 1;
		}
		fout << result;
	} else {
		cout << result;
	}

}
catch (parse_error const& e)
{
	cerr << "The line " << e.linenr << " caused following parse error: " << e.info << endl;
	return 2;
}
