[_/backend/api/description/raw]
check/type = string
description = A link to the blueprint describing the API.
example = https://doc.libelektra.org/api/snippet-sharing.md

[_/backend/api/description/html]
check/type = string
description = A link to the compiled blueprint describing the API.
example = https://doc.libelektra.org/api/snippet-sharing.html

[_/backend/jwt/encryption/secret]
check/type = string
description = A secret string used to encrypt session tokens (JWT).
example = al3h120d8a_19s

[_/backend/jwt/validity]
check/type = int
description = The number of seconds a JWT is valid from its creation.
example = 3600
default = 7200

[_/backend/kdb/path/configs]
check/type = string
description = The root path being used to store configuration snippet entries, must start with a namespace.
example = user/@tool@/configs
default = dir/configs

[_/backend/kdb/path/users]
check/type = string
description = The root path being used to store user entries, must start with a namespace.
example = user/@tool@/users
default = dir/users

[_/backend/output/default/entry/sort]
check/enum = 'asc', 'desc'
description = The default sort direction being used for requests against configuration snippet entry resources.
default = 'asc'

[_/backend/output/default/entry/sortby]
check/enum = 'key', 'organization', 'application', 'scope', 'slug', 'title', 'author', 'created_at'
description = The default sort criteria being used for requests against configuration snippet entry resources.
default = 'key'

[_/backend/output/default/entry/filterby]
check/enum = 'all', 'key', 'title', 'description', 'author', 'tags'
description = The default filter criteria being used for requests against configuration snippet entry resources.
default = 'all'

[_/backend/output/default/user/sort]
check/enum  = 'asc', 'desc'
description = The default sort direction being used for requests against user entry resources.
default = 'asc'

[_/backend/output/default/user/sortby]
check/enum = 'username', 'email', 'created_at'
description = The default sort criteria being used for requests against user entry resources.
default = 'username'

[_/backend/output/default/user/filterby]
check/enum = 'all', 'username', 'email'
description = The default filter criteria being used for requests against user entry resources.
default = 'all'

[_/backend/permissions/entry/create]
check/type = int
check/type/min = 0
check/type/max = 100
description = The required rank a user needs to be able to create new configuration snippet entries.
default = 10

[_/backend/permissions/entry/edit]
check/type = int
check/type/min = 0
check/type/max = 100
description = The required rank a user needs to be able to edit any configuration snippet entry (also from other users).
default = 50

[_/backend/permissions/entry/delete]
check/type = int
check/type/min = 0
check/type/max = 100
description = The required rank a user needs to be able to delete any configuration snippet entry (also from other users).
default = 50

[_/backend/permissions/user/view]
check/type = int
check/type/min = 0
check/type/max = 100
description = The required rank a user needs to be able to view account details of other users.
default = 100

[_/backend/permissions/user/edit]
check/type = int
check/type/min = 0
check/type/max = 100
description = The required rank a user needs to be able to edit account details of other users.
default = 100

[_/backend/permissions/user/delete]
check/type = int
check/type/min = 0
check/type/max = 100
description = The required rank a user needs to be able to delete user accounts of other users.
default = 100
