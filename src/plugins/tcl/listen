Current version: (without significant spaces)

{     {key=val {metakey=b} {comment  =  huhu  }   }  }



The big advantage of TCL style lists would be that
also arbitrary meta data could be embedded in a
natural and distinguish-able style.


% set ol {{key val {a b c d}} {key val {a b c d}}}
{key val {a b c d}} {key val {a b c d}}

user/key = {
 a-multi line
 value {meta-key1 meta-value}
 {meta-key2 meta-value}
}


http://alumnit.ca/wiki/attachments/uniconf-presentation.pdf



% set s {[svdfvsyvsfdvs  sretezrzrzerz
trhzezezetzrt]}
[svdfvsyvsfdvs  sretezrzrzerz
trhzezezetzrt]
% llength $s
3
% lindex $s 0
[svdfvsyvsfdvs
% list "abc xy \[ehrgs"
{abc xy [ehrgs}
% set l {\0$  "
" \a[}
\0$  "
" \a[
% llength $l
3
% lindex $l 0
$
% string length [lindex $l 0]
2
% string length [lindex $l 1]
1
% set x {a ab b "
" c \0 d $}
a ab b "
" c \0 d $
% dict fsdcs
unknown or ambiguous subcommand "fsdcs": must be append, create, exists, filter, for, get, incr, info, keys, lappend, merge, remove, replace, set, size, unset, update, values, or with
% dict get $x d
$
% set o {key val {a b c d}}
key val {a b c d}
% set ol {{key val {a b c d}} {key val {a b c d}}}
{key val {a b c d}} {key val {a b c d}}
% llengh $ol
invalid command name "llengh"
% foreach oo $ol { puts $oo }
key val {a b c d}
key val {a b c d}
% set a {abc{def}sasxdsy}
abc{def}sasxdsy
% llength $a
1
% set a {abc \{ def{\} def} }
abc \{ def{\} def}
% foreach b $a { puts $b}
abc
{
def{}
def}
% set a {abc \{ def{\} def} } }
wrong # args: should be "set varName ?newValue?"
% set a {abc \{ def{\} def} x} }
wrong # args: should be "set varName ?newValue?"
% set a "abc \\{ def{\\} def} x} "
abc \{ def{\} def} x}
% set a {a b a x}
a b a x
% dict get $a a
x
% dict set $a b d
b d
% man n dict
No manual entry for dict in section n
Siehe auch „man 7 undocumented“ für Hilfe, wenn Manual-Seiten nicht verfügbar sind.
child process exited abnormally
% man 3tcl dict
No manual entry for dict in section 3tcl
Siehe auch „man 7 undocumented“ für Hilfe, wenn Manual-Seiten nicht verfügbar sind.
child process exited abnormally
% set a
a b a x
% dict set a b d
a x b d
% dict names $a
unknown or ambiguous subcommand "names": must be append, create, exists, filter, for, get, incr, info, keys, lappend, merge, remove, replace, set, size, unset, update, values, or with
% dict keys $a
a b
% lsort -dictionary [dict keys $a]
a b
% puts $a
a x b d
% dict set a x f
a x b d x f
% dict set a c k
a x b d x f c k
% ::unsupp
invalid command name "::unsupp"
% info comm ::tcl::unsupported::*
::tcl::unsupported::disassemble
% ::tcl::unsupported::disassemble
wrong # args: should be "::tcl::unsupported::disassemble type procName|lambdaTerm|script"
% ::tcl::unsupported::disassemble $a
wrong # args: should be "::tcl::unsupported::disassemble type procName|lambdaTerm|script"
% %  
