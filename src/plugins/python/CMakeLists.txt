# NOTE: this plugins requires python 3 although it's compatible with python2
# because of the following build systems issues:
# - it's impossible to compile this plugin twice
# - however it's also impossible to create a python2 plugin and include the
#   cpp files of this plugin because we also need to mangle the exported symbols
# - although elektra has support for symbol mangling (ELEKTRA_VARIANT) we can't
#   make us of this because the exported symbols will also be generated by the
#   build environment for the elektra-full build (magic is happening in exported_symbols)
# - and it's impossible to remove the plugin from elektra-full

find_package(PythonLibs 3)
find_package(SWIG 2)

# bindings are required for tests
list (FIND BINDINGS "swig_python3" FINDEX)

if (PYTHONLIBS_FOUND AND SWIG_FOUND AND FINDEX GREATER -1)
	include (LibAddMacros)

	execute_process (
		COMMAND ${SWIG_EXECUTABLE} -c++ -python -py3 -external-runtime runtime.h
		WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
	)

	add_plugin(python
		CPP
		SOURCES
			python.hpp python.cpp ${CMAKE_CURRENT_BINARY_DIR}/runtime.h
		INCLUDE_DIRECTORIES
			${PYTHON_INCLUDE_DIR}
		LINK_LIBRARIES
			${PYTHON_LIBRARIES}
		COMPILE_DEFINITIONS
			SWIG_TYPE_TABLE=kdb
			SWIG_RUNTIME=\"runtime.h\"
			ELEKTRA_PLUGIN_NAME=\"python\"
	)

	if (FALSE)
	execute_process (
		COMMAND ${SWIG_EXECUTABLE} -c++ -python -external-runtime runtime-py2.h
		WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
	)

	add_plugin(python2
		CPP
		SOURCES
			python.hpp python.cpp ${CMAKE_CURRENT_BINARY_DIR}/runtime.h
		INCLUDE_DIRECTORIES
			${PYTHON2_INCLUDE_DIR}
		LINK_LIBRARIES
			${PYTHON2_LIBRARIES}
		COMPILE_DEFINITIONS
			SWIG_TYPE_TABLE=kdb
			SWIG_RUNTIME=\"runtime-py2.h\"
			ELEKTRA_VARIANT=py2
			ELEKTRA_PLUGIN_NAME=\"python2\"
	)
	endif ()

	# we call this SWIG_COMPILE_FLAGS because we have the same variable in our swig bindings
	set (SWIG_COMPILE_FLAGS "-Wno-shadow -Wno-old-style-cast -Wno-unused-variable")
	set_source_files_properties (python.cpp PROPERTIES COMPILE_FLAGS "${SWIG_COMPILE_FLAGS}")

	# test environment clears env so setting PYTHONPATH is no option
	# we workaround this by changing the current directory to our bindings
	# output directory + our test adds the current directory to pythons sys.path
	add_plugintest (python
		MEMLEAK
		INCLUDE_DIRECTORIES
			${PYTHON_INCLUDE_DIR}
		LINK_LIBRARIES
			${PYTHON_LIBRARIES}
		WORKING_DIRECTORY
			${CMAKE_CURRENT_BINARY_DIR}/../../bindings/swig/python3/
		COMPILE_DEFINITIONS
			ELEKTRA_PLUGIN_NAME=\"python\"
	)

	if (FALSE)
	add_plugintest (python2
		MEMLEAK
		INCLUDE_DIRECTORIES
			${PYTHON2_INCLUDE_DIR}
		LINK_LIBRARIES
			${PYTHON2_LIBRARIES}
		WORKING_DIRECTORY
			${CMAKE_CURRENT_BINARY_DIR}/../../bindings/swig/python2/
		COMPILE_DEFINITIONS
			ELEKTRA_PLUGIN_NAME=\"python2\"
	)
	endif ()
elseif (NOT PYTHONLIBS_FOUND)
	remove_plugin (python "python libs not found")
elseif (NOT SWIG_FOUND)
	remove_plugin (python "swig not found")
else ()
	remove_plugin (python "swig_python3 bindings not enabled")
endif ()
