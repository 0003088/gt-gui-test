= TOOLS =







== LIBTOOLS ==

mount spec

let backends to import/export

use it for import/export/convert

convert
	using dir namespace in /tmp?
	or get/set with root keys?

kdb-shell:
	use import/export
	automatic tests for functionality
	Examples in --help

add list-plugin functionality

add global mountpoints functionality

more testing




== MOUNT ==

multi-mount (e.g. all .ini from one folder)

allow --no-env --no-arg --no-default arguments?








== KDB ==

kdb-editor
	edit file in any of Elektra's format in an editor
	export to temporary file, open with editor and reimport

allow key array increments with kdb tool

list existing plugins
	dynamically detect them when installed

allow change of symlink (resolver, storage)

kdb-export:
	in a way that it can be used as shell script to immediately
	import

kdb resolve feature:
	output file how it would resolve for key

kdb tool:
	allow verification of local key database by exported file
	tset (typesafe set)

env-get env-set `kdb env-get`

export should be able to export only configuration that was changed
	suppress default config by some metadata

install config (mount+preload system config) by using meta struct

kdb tool:
	request -f for rm, mv in system/elektra


== GEN ==

using python kdb for gen

code generator always yields LONG_MIN, LONG_MAX on any type!

cmake support for "kdb gen" (run kdb gen within cmake)

use doc/METADATA.ini to validate config files
	fix check/type vs. type and check/type/{min,max} vs. range problem

environment parsing support
static compilation model

has_ queries
(allows one to differ between default fallback and intentional set default)

type: set of enums (see libmount for options)

limit range for bool/enum

override/fallback type inference

docu
validation of schema + line info

add Args... flags to onLayerActivation

helgrind: thread safety of layers?
is stack correct in with() when activate/deactivate across threads?







== GUI ==

commandline arguments:
	for self configuring
	for proc namespace




== GEN-BACKEND ==

Code generator that does what "kdb mount" does but provides a statically
compiled variant thereof.
Needed for bootstrapping.


== DBUS ==

Daemon which exports whole elektra configuration
(dbus bridge, first of so called bridges, other ideas: ldap, snmp)


= other stuff =

uninstall:
	let user find configuration of uninstalled software
upgrade

web2.0:
	share elektra xml files
	web frontent to kdb with xml/generate output/paste


== docu ==

git-<command> like functionality
ascii doc
man pages
