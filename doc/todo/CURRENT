== 0.8.4 ==

ELEKTRA_SET_ERROR in dump compile error

c++:
	Keyset operator==
	exceptions defined outside
	document C++ interface
	build docu for C++ interface.. (copydoc)
	import/export
	with automated kdb tests written from docu
	mark internal docu + hide it
	add examples in docu (snippets from testcases)

keyAdd+Set basename: handle . and .. correctly

warning in resolver aborts execution? (uname plugin)

debian package should have tests

fix warnings:
	(deactivate static build to disable duplications)
	unused
	shadow
	C++11

jenkins:
	build packages for dfc
	cleanup elektra branches
	job for docu
	use docu from build server?
	(source packages does not work)
	-> RELEASE plan

script testing:
	should be runned by make test
	should be available at tarket (be installed)
	can be everything directly at the kdb commandline tool
	should be able to run tests for all plugins +
	different combination of plugins
	should support partly installations and/or builds (not all plugins)
	line number (maybe not important)
	modularity (testing where the code is) (maybe not important)
		-> plugin specifica might be tested at other level/only C
		-> how to do without need of capabilities again? backends at serialization level?? (like with mount)

documentation:
	comment -> meta data
	split real meta data functions + kdbhelpers

import/export:
	with all plugins
	with automated kdb tests

kdb testcases:
	for get/set
	for mount/umount
	for import/export/convert
	using chroot

unit tests:
	debian package with unit tests
	install old unit tests with new elektra for ABI tests

== 0.8.5 ==

resolver recursively:
	double slashes
	starting with /
	kdb file using resolver plugin without function! (parent value!)
	should be returned in kdbGet/kdbSet

XDG specification:
	XDG_CONFIG_HOME
	KDB_CONFIG_HOME
	describe, implement, test
	xdg mail announce


kdb-shell:
	use import/export
	automatic tests for functionality
	Examples in --help

kdb tool:
	request -f for rm, mv in system/elektra
	converting of config files (automated tests)
	test mount/unmount

kdb resolve feature:
	output file how it would resolve for key

error specification plugin:
	parse error specification content into keyset

tcl:
	parse output?
	struct output!

documentation of the c++ binding
	with copydoc
	include files
	mark functions which are API/ABI stable (kdb.h)

git-buildpackage
	should work before release

release:
	ohloh statistics
	Preparation
	Cleanup
	Source Package
	Documentation
	Debian Package
	Publish

api:
	add examples
	add tutorial

chroot:
	add -c --chroot option for all plugins

kdb tool:
	allow verification of local key database by exported file
	tset (typesafe set)
