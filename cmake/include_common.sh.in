#!/bin/sh
#set -x
@DISCLAIMER@
# This file is AUTO GENERATED, do not modify it or your changes might be
# lost!
#
# shell test suite v0.3 for kdb command
set -x

# variables to count up errors and tests
nbError=0
nbTest=0

# the script itself
scriptName=`basename $0`

#RANDOM does not work with testdata
#RANDOM=`mktemp -u --tmpdir=/ XXXXXXXXXXXX`
MOUNTPOINT="/tests/script$RANDOM"
RANDOMNAME=`echo $RANDOM | tr / _`
MOUNTNAME="_tests_script$RANDOMNAME"

USER_ROOT="user/tests/script$RANDOM"
SYSTEM_ROOT="system/tests/script$RANDOM"


USER="`id -un`"
GROUP="`id -gn`"

SYSTEM_FOLDER=@KDB_DB_SYSTEM@
USER_FOLDER=@KDB_DB_HOME@/$USER/@KDB_DB_USER@
PLUGINS=`echo "@PLUGINS@" | tr ';' ' '`

DATE=`date "+%b %d %H:%M"`

#succeed if the previous command was successful
succeed_if ()
{
	if [ $? != "0" ]
	then
		nbError=$(( $nbError + 1 ))
		echo error: $*
	fi
	nbTest=$(( $nbTest + 1 ))
}

#fails and exits the program if the previous command failed
exit_if_fail ()
{
	if [ $? != "0" ]
	then
		if type cleanup
		then
			echo "fatal: $*"
			cleanup
		else
			echo "fatal (no cleanup): $*"
		fi
		exit 1
	fi
	nbTest=$(( $nbTest + 1 ))
}

end_script()
{
	echo "$scriptName RESULTS: $nbTest test(s) done $nbError error(s)."
	exit "$nbError"
}

check_version()
{
	echo "Check if script tests the correct version"

	[ "x`$KDB get system/elektra/version/constants/KDB_VERSION 2> /dev/null`" = "x@KDB_VERSION@" ]
	exit_if_fail "Script was not compiled with this elektra version: KDB_VERSION mismatch"

	[ "x`$KDB get system/elektra/version/constants/SO_VERSION 2> /dev/null`" = "x@SO_VERSION@" ]
	exit_if_fail "Script was not compiled with this elektra version: SO_VERSION mismatch"
}


is_not_rw_storage()
{
	test ! "x`$KDB info $PLUGIN provides`" = "xstorage" \
	-o "x$PLUGIN" = "xhosts" \
	-o "x$PLUGIN" = "xfstab" \
	-o "x$PLUGIN" = "xuname"
}










#last line of include_common.sh
