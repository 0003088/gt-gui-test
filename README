About Man Pages
---------------
Man pages are generated from a DocBook XML using XSLTs from the docbook-style-xsl package (on Fedora), and the xsltproc as the XSLT engine. So rg.1.xml docbook source is converted to the rg.1 man page, for example.

This caused several problems when compiling them in other distros, because of the lack of these tools.

Since version 0.2.7, the compiled man pages are included in the tarball. So unless you 'make clean' globally, you'll be able to 'make; make install' globaly even without these tools.


Compiling and Packaging
-----------------------

Linux Registry is such a simple software, that you'll probably wont need it to recompile from source. Use the binary RPM from the main repository. It should work for any RPM based distribution.

If you still wants to compile it, avoid using the tarball. It is an obsolete method of compiling. Use the source RPM instead.

Download it from the main repository as registry-*.src.rpm and rebuild the RPMs:

  $ rpm --rebuild registry-*.src.rpm

This will generate RPMs in your packages directory ready to be installed.


Makefile
--------
You can issue the following subcomands to make:

- make or make all
  Make everything, from compiling code to creating man pages.

- make install
  Installs everything under / or under what is defined in DESTDIR.
  Possible use: make DESTDIR=/some/parent/folder install

- make clean
  Clean everything that is not the original pure code.

- make commit
  To commit changes to the Subversion repository.

- make dist
  Generates the tarball in parent directory, using VERSION file.

- make rpm
  Makes tarball, compiles and generate Registry RPMs


Under the doc/ folder, you can make:

- make or make all or make man
  Create the man files

- make clean
  Removes everything that was generated

- make install
  Installs everything using ${DESTDIR} as root directory

- make html
  To create the HTML files for the registry.sf.net website

- make pub
  Publish all documentation to registry.sf.net
