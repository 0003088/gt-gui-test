#!/bin/bash
#
# @kdbdname@:   Starts the Elektra Key Database Daemon
#
# chkconfig: - 00 99
# description:  This is the overall daemon needed to correctly access Elektra \
#               key databases on backends like BerkeleyDB. \
#               The daemon will use the backend pointed \
#               by /lib/elektra/libelektra-ddefault.so. \
#               Though not recomended, an elektrified program can access a \
#               key database without this daemon. But different permissions \
#               calculations will be performed.
# processname: @sbindir@/@kdbdname@
# pidfile: @localstatedir@/run/@kdbdname@/@kdbdname@.pid
# config:
#
### BEGIN INIT INFO
# Provides: @kdbdname@
# Required-Start: 
# Default-Stop: 0 1 6
# Short-Description: Starts the Elektra Key Database access daemon
# Description:  This is the overall daemon needed to correctly access Elektra \
#               key databases on backends like BerkeleyDB. \
#               The daemon will use the backend pointed \
#               by /lib/elektra/libelektra-ddefault.so. \
#               Though not recomended, an elektrified program can access a \
#               key database without this daemon. But different permissions \
#               calculations will be performed.
### END INIT INFO
#
# $Id$
#
#


KDBD_PATH=@sbindir@
RETVAL=0
prog=@kdbdname@
pidfile=@localstatedir@/run/$prog/$prog.pid

# Sanity checks.
#[ -f /etc/nscd.conf ] || exit 0
[ -x $KDBD_PATH/$prog ] || exit 0

# Source function library.
. /etc/init.d/functions

# Source an auxiliary options file if we have one, and pick up NSCD_OPTIONS.
#[ -r /etc/sysconfig/nscd ] && . /etc/sysconfig/nscd

start () {
#	[ -d @localstatedir@/run/$prog ] || mkdir @localstatedir@/run/$prog
#    [ -d /var/db/nscd ] || mkdir /var/db/nscd
#    secure=""
	echo -n $"Starting $prog: "
	daemon $KDBD_PATH/$prog     # $secure $KDBD_OPTIONS
#	daemon --check $prog $prog --pidfile=$pidfile
	RETVAL=$?
	echo
	[ $RETVAL -eq 0 ] && touch /var/lock/subsys/$prog
	return $RETVAL
}

stop () {
	echo -n $"Stopping $prog: "
	killproc $prog
	echo
	RETVAL=$?
	[ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/$prog
	return $RETVAL
}

restart() {
	stop
	start
}

# See how we were called.
case "$1" in
	start)
	start
	RETVAL=$?
	;;
	stop)
	stop
	RETVAL=$?
	;;
    status)
	status $prog
	RETVAL=$?
	;;
	restart)
	restart
	RETVAL=$?
	;;
	try-restart | condrestart)
	[ -e /var/lock/subsys/$prog ] && restart
	RETVAL=$?
	;;
	force-reload | reload)
	echo -n $"Reloading $prog: "
	killproc $KDBD_PATH/$prog -HUP
	RETVAL=$?
	echo
	;;
	*)
	echo $"Usage: $0 {start|stop|status|restart|reload|condrestart}"
	RETVAL=1
	;;
esac
exit $RETVAL
